function BoardGame.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
push constant 5
pop static 0
push constant 25
pop this 6
push constant 1
pop this 0
push constant 3
pop this 1
push constant 5
pop this 3
push constant 7
pop this 2
push constant 9
pop this 4
push constant 5
call Array.new 1
pop this 5
push constant 0
push this 5
add
push this 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 5
add
push this 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 5
add
push this 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 5
add
push this 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 5
add
push this 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
return
function BoardGame.getNumOfUnmarkedSticks 0
push argument 0
pop pointer 0
push this 6
return
function BoardGame.getNumOfUnmarkedSticksInRow 1
push argument 0
pop pointer 0
push argument 1
push constant 1
sub
push this 5
add
pop pointer 1
push that 0
pop local 0
push local 0
return
function BoardGame.printBoard 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push local 0
push this 5
add
pop pointer 1
push that 0
pop local 1
push local 1
call Output.printInt 1
pop temp 0
push local 0
push constant 1
add
pop local 0
call Output.println 0
pop temp 0
goto WHILE_EXP0
label WHILE_END0
call Output.println 0
pop temp 0
push constant 0
return
function BoardGame.markStickSequence 3
push argument 0
pop pointer 0
push argument 1
call Move.getRow 1
pop local 0
push argument 1
call Move.getNumOfSticks 1
pop local 1
push pointer 0
push local 0
call BoardGame.getNumOfUnmarkedSticksInRow 2
pop local 2
push local 2
push local 1
sub
pop local 2
push local 0
push constant 1
sub
push this 5
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 6
push local 1
sub
pop this 6
push constant 0
return
